#!/usr/bin/env bash
# Summary: Configure the shell environment for chainenv
# Usage: eval "$(chainenv init [-|--path] [--no-rehash] [<shell>])"

set -e
[ -n "$CHAINENV_DEBUG" ] && set -x

# Provide chainenv completions
if [ "$1" = "--complete" ]; then
  echo -
  echo --path
  echo --no-rehash
  echo bash
  echo fish
  echo ksh
  echo zsh
  exit
fi

mode="help"
no_rehash=""
for args in "$@"
do
  if [ "$args" = "-" ]; then
    mode="print"
    shift
  fi

  if [ "$args" = "--path" ]; then
    mode="path"
    shift
  fi
  
  if [ "$args" = "--no-rehash" ]; then
    no_rehash=1
    shift
  fi
done

shell="$1"
if [ -z "$shell" ]; then
  shell="$(ps -p "$PPID" -o 'args=' 2>/dev/null || true)"
  shell="${shell%% *}"
  shell="${shell##-}"
  shell="${shell:-$SHELL}"
  shell="${shell##*/}"
  shell="${shell%%-*}"
fi

root="${0%/*}/.."

function main() {
  case "$mode" in
  "help")
    help_
    exit 1
    ;;
  "path")
    print_path
    exit 0
    ;;
  "print")
    init_dirs
    print_env
    print_completion
    print_shell_function
    exit 0
    ;;
  esac
  # should never get here
  exit 2
}

function help_() {
  case "$shell" in
  bash )
    profile='~/.bash_profile'
    rc='~/.bashrc'
    ;;
  zsh )
    profile='~/.zprofile'
    rc='~/.zshrc'
    ;;
  ksh )
    profile='~/.profile'
    rc='~/.profile'
    ;;
  * )
    profile='your shell'\''s login startup file'
    rc='your shell'\''s interactive startup file'
    ;;
  esac

  {
    echo
    echo '# (The below instructions are intended for common'
    echo '# shell setups. See the README for more guidance'
    echo '# if they don'\''t apply and/or don'\''t work for you.)'
    echo 
    case "$shell" in
    fish )
      echo "# Add chainenv executable to PATH by running"
      echo "# the following interactively:"
      echo
      echo 'set -Ux CHAINENV_ROOT $HOME/.chainenv'
      echo 'set -U fish_user_paths $CHAINENV_ROOT/bin $fish_user_paths'
      echo
      echo "# Load chainenv automatically by appending"
      echo "# the following to ~/.config/fish/config.fish:"
      echo
      echo 'status is-interactive; and chainenv init --path | source'
      echo 'chainenv init - | source'
      echo
      echo "# If fish is not your login shell,"
      echo "# add the following to ~/.profile:"
      echo
      echo 'export CHAINENV_ROOT="$HOME/.chainenv"'
      echo 'export PATH="$CHAINENV_ROOT/bin:$PATH"'
      echo 'eval "$(chainenv init --path)"'
      echo
      ;;
    * )
      echo '# Add chainenv executable to PATH and'
      echo '# enable shims by adding the following'
      case "$shell" in
      bash|ksh )
        echo '# to ~/.profile:'
        ;;
      * )
        echo '# to ~/.profile and '"${profile}"':'
        ;;
      esac
      echo
      echo 'export CHAINENV_ROOT="$HOME/.chainenv"'
      echo 'export PATH="$CHAINENV_ROOT/bin:$PATH"'
      echo 'eval "$(chainenv init --path)"'
      echo
      if [[ $shell == "bash" ]]; then
        echo '# If your ~/.profile sources '"${rc}"','
        echo '# the lines need to be inserted before the part'
        echo '# that does that. See the README for another option.'
        echo
        echo '# If you have '"${profile}"', make sure that it'
        echo '# also executes the above lines -- e.g. by'
        echo '# copying them there or by sourcing ~/.profile'
        echo
      fi
      echo "# Load chainenv into the shell by adding"
      echo "# the following to ${rc}:"
      echo
      echo 'eval "$(chainenv init -)"'
      echo
      echo '# Make sure to restart your entire logon session'
      echo '# for changes to profile files to take effect.'
      echo
      ;;
    esac
  } >&2
}

function init_dirs() {
  mkdir -p "${CHAINENV_ROOT}/"{shims,versions}
}

function print_path() {
  # Need to use the login shell rather than the current one
  case "$shell" in
    fish )
      echo "set -gx PATH '${CHAINENV_ROOT}/shims' \$PATH"
      ;;
    * )
      echo 'export PATH="'${CHAINENV_ROOT}'/shims:${PATH}"'
      ;;
  esac
}

function print_env() {
  case "$shell" in
  fish )
    echo "set -gx CHAINENV_SHELL $shell"
    ;;
  * )
    echo "export CHAINENV_SHELL=$shell"
    ;;
  esac
}

function print_completion() {
  completion="${root}/completions/chainenv.${shell}"
  if [ -r "$completion" ]; then
    echo "source '$completion'"
  fi

  if [ -z "$no_rehash" ]; then
    echo 'command chainenv rehash 2>/dev/null'
  fi
}

function print_shell_function() {
  commands=(`chainenv-commands --sh`)
  case "$shell" in
  fish )
    cat <<EOS
function chainenv
  set command \$argv[1]
  set -e argv[1]

  switch "\$command"
  case ${commands[*]}
    source (chainenv "sh-\$command" \$argv|psub)
  case '*'
    command chainenv "\$command" \$argv
  end
end
EOS
    ;;
  ksh )
    cat <<EOS
function chainenv {
  typeset command
EOS
    ;;
  * )
    cat <<EOS
chainenv() {
  local command
EOS
    ;;
  esac

  if [ "$shell" != "fish" ]; then
    IFS="|"
    cat <<EOS
  command="\${1:-}"
  if [ "\$#" -gt 0 ]; then
    shift
  fi

  case "\$command" in
  ${commands[*]})
    eval "\$(chainenv "sh-\$command" "\$@")"
    ;;
  *)
    command chainenv "\$command" "\$@"
    ;;
  esac
}
EOS
  fi
}

main

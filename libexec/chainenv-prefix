#!/usr/bin/env bash
# Summary: Display prefix for a Python version
# Usage: chainenv prefix [<version>]
#
# Displays the directory where a Python version is installed. If no
# version is given, `chainenv prefix' displays the location of the
# currently selected version.

set -e
[ -n "$CHAINENV_DEBUG" ] && set -x

# Provide chainenv completions
if [ "$1" = "--complete" ]; then
  echo system
  exec chainenv-versions --bare
fi

if [ -n "$1" ]; then
  OLDIFS="$IFS"
  { IFS=:
    export CHAINENV_VERSION="$*"
  }
  IFS="$OLDIFS"
elif [ -z "$CHAINENV_VERSION" ]; then
  CHAINENV_VERSION="$(chainenv-version-name)"
fi

CHAINENV_PREFIX_PATHS=()
OLDIFS="$IFS"
{ IFS=:
  for version in ${CHAINENV_VERSION}; do
    if [ "$version" = "system" ]; then
      if PYTHON_PATH="$(CHAINENV_VERSION="${version}" chainenv-which python 2>/dev/null)" || \
          PYTHON_PATH="$(CHAINENV_VERSION="${version}" chainenv-which python3 2>/dev/null)" || \
          PYTHON_PATH="$(CHAINENV_VERSION="${version}" chainenv-which python2 2>/dev/null)"; then
        CHAINENV_PREFIX_PATH="${PYTHON_PATH%/bin/*}"
        CHAINENV_PREFIX_PATH="${CHAINENV_PREFIX_PATH:-/}"
      else
        echo "chainenv: system version not found in PATH" >&2
        exit 1
      fi
    else
      CHAINENV_PREFIX_PATH="${CHAINENV_ROOT}/versions/${version}"
    fi
    if [ -d "$CHAINENV_PREFIX_PATH" ]; then
      CHAINENV_PREFIX_PATHS=("${CHAINENV_PREFIX_PATHS[@]}" "$CHAINENV_PREFIX_PATH")
    else
      echo "chainenv: version \`${version}' not installed" >&2
      exit 1
    fi
  done
}
IFS="$OLDIFS"

OLDIFS="$IFS"
{ IFS=:
  echo "${CHAINENV_PREFIX_PATHS[*]}"
}
IFS="$OLDIFS"
